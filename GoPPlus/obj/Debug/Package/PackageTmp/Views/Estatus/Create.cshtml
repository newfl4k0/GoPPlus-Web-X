@model GoPS.Models.Estatus

@{
    ViewBag.Title = "Crear Estatus de Servicio";
}

@Html.Hidden("Permiso", "Configuraciones")
@using (Html.BeginForm("Create", "Estatus", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="main">
        @{Html.RenderPartial("NavBar_CatEstatus", "Crear"); }
        <div class="row">
            <div class="col-lg-12">
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "No se pudo crear el registro. Por favor, corrija los campos en rojo e intente de nuevo.", new { @class = "text-danger" })
                    <div class="form-group @(@ViewBag.MostrarEmpresas ? "show" : "hide")">
                        @Html.LabelFor(model => model.ID_Empresa, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.DropDownList("ID_Empresa", null, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_Empresa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-4">
                            <div class="">
                                @Html.HiddenFor(model => model.Imagen, new { @class = "file_hidden" })
                                @Html.HiddenFor(model => model.Peso_Imagen)
                                <div class="file_upload btn btn-default">
                                    @Html.EditorFor(model => model.File_Imagen, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                                </div>
                                <p class="file_name"></p>
                                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div>
                    @Html.ActionLink("Regresar", "Index", null, new { @class = "_Visualizacion" })
                </div>

            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/js/ValidarFileUpload.js"></script>
}
