@model GoPS.Models.Turnos

@{
    ViewBag.Title = "Crear Turno";
}

@Html.Hidden("Permiso", "Configuraciones")
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="main">
        @{Html.RenderPartial("NavBar_CatTurnos", "Crear"); }
        <div class="row">
            <div class="col-lg-12">
                <div class="form-horizontal">
                    <hr />
                    @if (ViewBag.Success != null)
                    {
                        <p class="text-success">Registrado Exitosamente.</p>
                    }
                    @Html.ValidationSummary(true, "No se pudo crear el registro. Por favor, corrija los campos en rojo e intente de nuevo.", new { @class = "text-danger" })

                    <div class="form-group @(@ViewBag.MostrarAfiliados ? "show" : "hide")">
                        @Html.LabelFor(model => model.ID_Afiliado, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.DropDownList("ID_Afiliado", null, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_Afiliado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Habilitado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Habilitado, new { htmlAttributes = new { @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.Habilitado, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Hora_Inicio, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.DropDownList("Hora_Inicio", null, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Hora_Inicio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Hora_Fin, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.DropDownList("Hora_Fin", null, "-Seleccione-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Hora_Fin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dias, htmlAttributes: new { @class = "control-label col-md-2 field-required" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Dias)
                            @Html.EditorFor(model => model.diasList, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dias, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div>
                    @Html.ActionLink("Regresar", "Index", null, new { @class = "_Visualizacion" })
                </div>

            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/js/ActualizarDiasList.js"></script>
}
